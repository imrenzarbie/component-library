/* Button.module.scss */

/*
  Define CSS variables for theming, similar to shadcn/ui.
  You would typically define these in your global CSS file on the :root selector.
*/
:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;

  --primary: 222.2 47.4% 11.2%;
  --primary-foreground: 210 40% 98%;

  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;

  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;

  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;

  --accent: 210 40% 96.1%;
  --accent-foreground: 222.2 47.4% 11.2%;

  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 222.2 84% 4.9%;

  --radius: 0.5rem;
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: var(--radius);
  font-size: 0.875rem; /* 14px */
  font-weight: 500;
  border: none;
  cursor: pointer;
  position: relative;

  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;

  &:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }

  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
}

/* Variants */
.default {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  &:hover {
    background-color: hsl(var(--primary) / 0.9);
  }
}

.destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
  &:hover {
    background-color: hsl(var(--destructive) / 0.9);
  }
}

.outline {
  border: 1px solid hsl(var(--input));
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  &:hover {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }
}

.secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
  &:hover {
    background-color: hsl(var(--secondary) / 0.8);
  }
}

.ghost {
  background-color: transparent;
  color: hsl(var(--foreground));
  &:hover {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }
}

.link {
  background-color: transparent;
  color: hsl(var(--primary));
  text-underline-offset: 4px;
  &:hover {
    text-decoration: underline;
  }
}

/* Sizes */
.default { /* corresponds to size="default" */
  height: 40px;
  padding-left: 1rem; /* 16px */
  padding-right: 1rem;
}

.sm {
  height: 36px;
  border-radius: calc(var(--radius) - 2px);
  padding-left: 0.75rem; /* 12px */
  padding-right: 0.75rem;
}

.lg {
  height: 44px;
  border-radius: calc(var(--radius) + 2px);
  padding-left: 2rem; /* 32px */
  padding-right: 2rem;
}

.icon {
  height: 40px;
  width: 40px;
}

/* Loading State */
.loader {
  position: absolute;
  width: 1rem; /* 16px */
  height: 1rem;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.contentVisible {
  visibility: visible;
  display: inline-flex;
  align-items: center;
}

.contentHidden {
  visibility: hidden;
  /* Keep the original content rendered but hidden to preserve button dimensions */
  display: inline-flex;
  align-items: center;
}